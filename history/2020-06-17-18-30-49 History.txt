create table SystemUserData (systemUserDataID int auto_increment primary key, loginID varchar(20), loginPW varchar(20));
create table AbsEmployeeData (absEmployeeDataID int auto_increment primary key, EmployeeName varchar(20));
create table AccidentData (accidentDataID int auto_increment primary key, date varchar(100), location varchar(200), accidentType varchar(200));
create table AccidentInvestigation (accidentInvestigationID int auto_increment primary key, scenario varchar(200), damage varchar(100), treatment varchar(100), treatmentCost int);
create table Payjudge (payjudgeID int auto_increment primary key, payJudge varchar(200), evidence varchar(200), relatedLaw varchar(200));
create table LossData (lossDataID int auto_increment primary key, pay int, judgeEvidence varchar(200));
create table Lawsuit (lawsuitID int auto_increment primary key, payOut int);
create table RewardData (rewardDataID int auto_increment primary key, reAccidentDataID int, reAccidentInvestigationID int, rePayjudgeID int, reLossDataID int, reLawsuitID int);
create table Customer (customerID int auto_increment primary key, CustomerName varchar(20), residence varchar(100), phoneNum varchar(15), email varchar(30), familyIllHistory enum('Cancer', 'Diabetes', 'Stroke', 'HeartDisease', 'HighBloodPressure'), socialSecurityNum varchar(20), gender boolean default false, job varchar(30), property int, accidentHistory enum('TotalLoss', 'Immersion', 'Theft', 'DamageToMyCar', 'DamageForOhterCar'), age int, accountNum varchar(30));
create table Insurance (insuranceID int auto_increment primary key, insuranceName varchar(30), content varchar(100), insuranceRatePermit boolean default false, productPermit boolean default false, lossPercent DECIMAL(16, 4) NOT NULL, insuranceType enum('Car', 'Fire', 'Disease'));
create table CustIns (cusInsCustomerID int, cusInsInsuranceID int);
create table CustomerTask (cusTaskCustomerID int, cusTaskRewardDataID int);
create table AccidentInvestigator (accidentInvestigatorID int auto_increment primary key, accidentInvestigatorState boolean default false);
create table AccidentInvestigatorTask (aiTaskAccidentInvestigatorID int, aiTaskRewardDataID int);
create table LossCheckMan (lossCheckManID int auto_increment primary key, lossCheckManState boolean default false);
create table LossCheckManTask (lsTaskLossCheckManID int, lsTaskRewardDataID int);
create table Payjudger (payjudgerID int auto_increment primary key, payjudgerState boolean default false);
create table PayjudgerTask (pjTaskPayjudgerID int, pjTaskRewardDataID int);
create table Lawyer (lawyerID int auto_increment primary key, lawyerState boolean default false);
create table LawyerTask (lwTaskLawyerID int, lwTaskRewardDataID int);
create table DiseaseIns (diseaseID int auto_increment primary key, disease enum('CANCER', 'HEARTH_ATTACK'));
create table InsuranceRatePermitMan (insuranceRatePermitManID int auto_increment primary key, insuranceRatePermitManState boolean default false);
create table InsuranceRatePermitManTask (insTaskInsuranceRatePermitManID int, insTaskInsuranceID int);
create table ProductPermitMan (productPermitManID int auto_increment primary key, productPermitManState boolean default false);
create table ProductPermitManTask (proTaskProductPermitManID int, proTaskInsuranceID int);
create table Developer (developerID int auto_increment primary key, developerState boolean default false);
create table SalesMan (salesManID int auto_increment primary key, salesManState boolean default false);
create table SalesManager (salesManagerID int auto_increment primary key, salesManagerState boolean default false);
create table ActivityPlan (activityPlanID int auto_increment primary key, title varchar(100), salesDuration varchar(20), salesGoal int, activityGoal varchar(100), additionalJobOffer int, salesTargetCustomer enum('children', 'teenager', 'twenties', 'thirties', 'forties', 'fifties', 'sixties', 'eifhties', 'nineties', 'uptohundred'));
create table SalesTrainingPlan (salesTrainingPlanID int auto_increment primary key, title varchar(100), salesDuration enum('salesMan', 'SalesManager'), salesTraningPlanDate varchar(30), activityGoal varchar(50), salesTrainingGoal varchar(100), salesTrainingContent varchar(200));
Alter table AbsEmployeeData ADD foreign key (absEmployeeDataID) references SystemUserData(systemUserDataID) on delete cascade on update cascade;
Alter table RewardData ADD foreign key (reAccidentDataID) references AccidentData(accidentDataID) on delete set null on update cascade;
Alter table RewardData ADD foreign key (reAccidentInvestigationID) references AccidentInvestigation(accidentInvestigationID) on delete set null on update cascade;
Alter table RewardData ADD foreign key (rePayjudgeID) references Payjudge(payjudgeID) on delete set null on update cascade;
Alter table RewardData ADD foreign key (reLossDataID) references LossData(lossDataID) on delete set null on update cascade;
Alter table RewardData ADD foreign key (reLawsuitID) references Lawsuit(lawsuitID) on delete set null on update cascade;
Alter table CustIns ADD foreign key (cusInsCustomerID) references Customer(customerID) on delete cascade on update cascade;
Alter table CustIns ADD foreign key (cusInsInsuranceID) references Insurance(insuranceID) on delete no action on update cascade;
Alter table DiseaseIns ADD foreign key (diseaseID) references Insurance(insuranceID) on delete cascade on update cascade;
Alter table CustomerTask ADD foreign key (cusTaskCustomerID) references Customer(customerID) on delete cascade on update cascade;
Alter table CustomerTask ADD foreign key (cusTaskRewardDataID) references RewardData(rewardDataID) on delete cascade on update cascade;
Alter table AccidentInvestigatorTask ADD foreign key (aiTaskAccidentInvestigatorID) references AccidentInvestigator(accidentInvestigatorID) on delete cascade on update cascade;
Alter table AccidentInvestigatorTask ADD foreign key (aiTaskRewardDataID) references RewardData(rewardDataID) on delete cascade on update cascade;
Alter table LossCheckManTask ADD foreign key (lsTaskLossCheckManID) references LossCheckMan(lossCheckManID) on delete cascade on update cascade;
Alter table LossCheckManTask ADD foreign key (lsTaskRewardDataID) references RewardData(rewardDataID) on delete cascade on update cascade;
Alter table PayjudgerTask ADD foreign key (pjTaskPayjudgerID) references Payjudger(payjudgerID) on delete cascade on update cascade;
Alter table PayjudgerTask ADD foreign key (pjTaskRewardDataID) references RewardData(rewardDataID) on delete cascade on update cascade;
Alter table LawyerTask ADD foreign key (lwTaskLawyerID) references Lawyer(lawyerID) on delete cascade on update cascade;
Alter table LawyerTask ADD foreign key (lwTaskRewardDataID) references RewardData(rewardDataID) on delete cascade on update cascade;
Alter table InsuranceRatePermitManTask ADD foreign key (insTaskInsuranceRatePermitManID) references InsuranceRatePermitMan(insuranceRatePermitManID) on delete cascade on update cascade;
Alter table InsuranceRatePermitManTask ADD foreign key (insTaskInsuranceID) references Insurance(insuranceID) on delete cascade on update cascade;
Alter table ProductPermitManTask ADD foreign key (proTaskProductPermitManID) references ProductPermitMan(productPermitManID) on delete cascade on update cascade;
Alter table ProductPermitManTask ADD foreign key (proTaskInsuranceID) references Insurance(insuranceID) on delete cascade on update cascade;
Alter table AccidentInvestigator ADD foreign key (accidentInvestigatorID) references AbsEmployeeData(absEmployeeDataID) on delete cascade on update cascade;
Alter table LossCheckMan ADD foreign key (lossCheckManID) references AbsEmployeeData(absEmployeeDataID) on delete cascade on update cascade;
Alter table Payjudger ADD foreign key (payjudgerID) references AbsEmployeeData(absEmployeeDataID) on delete cascade on update cascade;
Alter table Lawyer ADD foreign key (lawyerID) references AbsEmployeeData(absEmployeeDataID) on delete cascade on update cascade;
Alter table InsuranceRatePermitMan ADD foreign key (insuranceRatePermitManID) references AbsEmployeeData(absEmployeeDataID) on delete cascade on update cascade;
Alter table ProductPermitMan ADD foreign key (productPermitManID) references AbsEmployeeData(absEmployeeDataID) on delete cascade on update cascade;
Alter table Developer ADD foreign key (developerID) references AbsEmployeeData(absEmployeeDataID) on delete cascade on update cascade;
Alter table SalesMan ADD foreign key (salesManID) references AbsEmployeeData(absEmployeeDataID) on delete cascade on update cascade;
Alter table SalesManager ADD foreign key (salesManagerID) references AbsEmployeeData(absEmployeeDataID) on delete cascade on update cascade;
